import { Document, Schema, Model, model } from 'mongoose';
import { IVehicle } from 'models/vehicle.model';

export interface VehicleModel extends IVehicle, Document {
  fullModel(): String;
}

export const VehicleSchema: Schema = new Schema({
  createdAt: Date,
  brand: String,
  model: String,
  engine: String,
  fuel: String,
  cylinders: Number
});

VehicleSchema.pre('save', next => {
  const now = new Date();
  if (!this.createdAt) {
    this.createdAt = now;
  }
  next();
});

VehicleSchema.methods.fullModel = () => {
  return `${this.brand.trim()} ${this.model.trim()}`;
};

export const Vehicle: Model<VehicleModel> = model<VehicleModel>(
  'Vehicle',
  VehicleSchema
);

// const Schema = mongoose.Schema;

// const VehicleSchema = Schema({
//   brand: String,
//   model: String,
//   engine: String,
//   fuel: String,
//   cylinders: Number
// });

// export const Vehicle = mongoose.model('vehicle', VehicleSchema);
